// Generated by convbdf on Sun Jan 22 19:03:11 2023
#include "graphics/fonts/bdf.h"

// Font information:
//  Name: -Schumacher-Clean-Medium-R-Normal--12-120-75-75-C-60-ISO10646-1
//  Size: 6x12
//  Box: 6 12 0 -3
//  Ascent: 9
//  First character: 0
//  Default character: 0
//  Characters: 384
//  Copyright: "Copyright 1989 Dale Schumacher, 1999 Robert Brady."

namespace Graphics {

// Character 0 (0x00)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |* * * |
// |      |
// |*   * |
// |      |
// |*   * |
// |      |
// |* * * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph0[] = {
	0x00,
	0x00,
	0xA8,
	0x00,
	0x88,
	0x00,
	0x88,
	0x00,
	0xA8,
	0x00,
	0x00,
	0x00
};

// Character 32 (0x20)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph32[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 33 (0x21)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph33[] = {
	0x00,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 34 (0x22)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// | * *  |
// | * *  |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph34[] = {
	0x00,
	0x50,
	0x50,
	0x50,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 35 (0x23)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | * *  |
// | * *  |
// |***** |
// | * *  |
// |***** |
// | * *  |
// | * *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph35[] = {
	0x00,
	0x00,
	0x50,
	0x50,
	0xF8,
	0x50,
	0xF8,
	0x50,
	0x50,
	0x00,
	0x00,
	0x00
};

// Character 36 (0x24)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// | **** |
// |* *   |
// | ***  |
// |  * * |
// |****  |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph36[] = {
	0x00,
	0x00,
	0x20,
	0x78,
	0xA0,
	0x70,
	0x28,
	0xF0,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 37 (0x25)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |**    |
// |**  * |
// |   *  |
// |  *   |
// | *    |
// |*  ** |
// |   ** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph37[] = {
	0x00,
	0x00,
	0xC0,
	0xC8,
	0x10,
	0x20,
	0x40,
	0x98,
	0x18,
	0x00,
	0x00,
	0x00
};

// Character 38 (0x26)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*     |
// |*     |
// | *    |
// |* * * |
// |*  *  |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph38[] = {
	0x00,
	0x00,
	0x70,
	0x80,
	0x80,
	0x40,
	0xA8,
	0x90,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 39 (0x27)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph39[] = {
	0x00,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 40 (0x28)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |    * |
// |   *  |
// |   *  |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |   *  |
// |   *  |
// |    * |
// |      |
// +------+
static const byte glyph40[] = {
	0x08,
	0x10,
	0x10,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x10,
	0x10,
	0x08,
	0x00
};

// Character 41 (0x29)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *    |
// |  *   |
// |  *   |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |  *   |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph41[] = {
	0x40,
	0x20,
	0x20,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x20,
	0x20,
	0x40,
	0x00
};

// Character 42 (0x2A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |  *   |
// |* * * |
// | ***  |
// |* * * |
// |  *   |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph42[] = {
	0x00,
	0x00,
	0x00,
	0x20,
	0xA8,
	0x70,
	0xA8,
	0x20,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 43 (0x2B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |  *   |
// |  *   |
// |***** |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph43[] = {
	0x00,
	0x00,
	0x00,
	0x20,
	0x20,
	0xF8,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 44 (0x2C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |  **  |
// |  **  |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph44[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x30,
	0x20,
	0x40,
	0x00
};

// Character 45 (0x2D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |***** |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph45[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF8,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 46 (0x2E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |  **  |
// |  **  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph46[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x30,
	0x00,
	0x00,
	0x00
};

// Character 47 (0x2F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |    * |
// |    * |
// |   *  |
// |   *  |
// |  *   |
// |  *   |
// | *    |
// | *    |
// |*     |
// |*     |
// |      |
// |      |
// +------+
static const byte glyph47[] = {
	0x08,
	0x08,
	0x10,
	0x10,
	0x20,
	0x20,
	0x40,
	0x40,
	0x80,
	0x80,
	0x00,
	0x00
};

// Character 48 (0x30)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | ***  |
// |*   * |
// |*  ** |
// |* * * |
// |**  * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph48[] = {
	0x00,
	0x70,
	0x88,
	0x98,
	0xA8,
	0xC8,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 49 (0x31)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  **  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph49[] = {
	0x00,
	0x10,
	0x30,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x00,
	0x00,
	0x00
};

// Character 50 (0x32)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | ***  |
// |*   * |
// |    * |
// |   *  |
// |  *   |
// | *    |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph50[] = {
	0x00,
	0x70,
	0x88,
	0x08,
	0x10,
	0x20,
	0x40,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 51 (0x33)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | ***  |
// |*   * |
// |    * |
// |  **  |
// |    * |
// |    * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph51[] = {
	0x00,
	0x70,
	0x88,
	0x08,
	0x30,
	0x08,
	0x08,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 52 (0x34)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  **  |
// |  **  |
// | * *  |
// | * *  |
// |***** |
// |   *  |
// |  *** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph52[] = {
	0x00,
	0x10,
	0x30,
	0x30,
	0x50,
	0x50,
	0xF8,
	0x10,
	0x38,
	0x00,
	0x00,
	0x00
};

// Character 53 (0x35)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |***** |
// |*     |
// |*     |
// |****  |
// |    * |
// |    * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph53[] = {
	0x00,
	0xF8,
	0x80,
	0x80,
	0xF0,
	0x08,
	0x08,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 54 (0x36)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  **  |
// | *    |
// |*     |
// |****  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph54[] = {
	0x00,
	0x30,
	0x40,
	0x80,
	0xF0,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 55 (0x37)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |***** |
// |*   * |
// |    * |
// |    * |
// |   *  |
// |   *  |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph55[] = {
	0x00,
	0xF8,
	0x88,
	0x08,
	0x08,
	0x10,
	0x10,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 56 (0x38)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | ***  |
// |*   * |
// |*   * |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph56[] = {
	0x00,
	0x70,
	0x88,
	0x88,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 57 (0x39)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |   *  |
// | **   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph57[] = {
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x10,
	0x60,
	0x00,
	0x00,
	0x00
};

// Character 58 (0x3A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |  **  |
// |  **  |
// |      |
// |      |
// |  **  |
// |  **  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph58[] = {
	0x00,
	0x00,
	0x00,
	0x30,
	0x30,
	0x00,
	0x00,
	0x30,
	0x30,
	0x00,
	0x00,
	0x00
};

// Character 59 (0x3B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |  **  |
// |  **  |
// |      |
// |      |
// |  **  |
// |  **  |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph59[] = {
	0x00,
	0x00,
	0x00,
	0x30,
	0x30,
	0x00,
	0x00,
	0x30,
	0x30,
	0x20,
	0x40,
	0x00
};

// Character 60 (0x3C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |    **|
// |  **  |
// |**    |
// |  **  |
// |    **|
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph60[] = {
	0x00,
	0x00,
	0x00,
	0x0C,
	0x30,
	0xC0,
	0x30,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 61 (0x3D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |***** |
// |      |
// |***** |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph61[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xF8,
	0x00,
	0xF8,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 62 (0x3E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |**    |
// |  **  |
// |    **|
// |  **  |
// |**    |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph62[] = {
	0x00,
	0x00,
	0x00,
	0xC0,
	0x30,
	0x0C,
	0x30,
	0xC0,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 63 (0x3F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | ***  |
// |*   * |
// |    * |
// |   *  |
// |  *   |
// |  *   |
// |      |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph63[] = {
	0x00,
	0x70,
	0x88,
	0x08,
	0x10,
	0x20,
	0x20,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 64 (0x40)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |* *** |
// |* *** |
// |* **  |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph64[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0xB8,
	0xB8,
	0xB0,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 65 (0x41)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// | * *  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph65[] = {
	0x00,
	0x00,
	0x20,
	0x50,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 66 (0x42)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |****  |
// |*   * |
// |*   * |
// |****  |
// |*   * |
// |*   * |
// |****  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph66[] = {
	0x00,
	0x00,
	0xF0,
	0x88,
	0x88,
	0xF0,
	0x88,
	0x88,
	0xF0,
	0x00,
	0x00,
	0x00
};

// Character 67 (0x43)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*     |
// |*     |
// |*     |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph67[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x80,
	0x80,
	0x80,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 68 (0x44)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***   |
// |*  *  |
// |*   * |
// |*   * |
// |*   * |
// |*  *  |
// |***   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph68[] = {
	0x00,
	0x00,
	0xE0,
	0x90,
	0x88,
	0x88,
	0x88,
	0x90,
	0xE0,
	0x00,
	0x00,
	0x00
};

// Character 69 (0x45)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |*     |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph69[] = {
	0x00,
	0x00,
	0xF8,
	0x80,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 70 (0x46)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |*     |
// |*     |
// |****  |
// |*     |
// |*     |
// |*     |
// |      |
// |      |
// |      |
// +------+
static const byte glyph70[] = {
	0x00,
	0x00,
	0xF8,
	0x80,
	0x80,
	0xF0,
	0x80,
	0x80,
	0x80,
	0x00,
	0x00,
	0x00
};

// Character 71 (0x47)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*     |
// |*  ** |
// |*   * |
// |*   * |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph71[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x80,
	0x98,
	0x88,
	0x88,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 72 (0x48)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph72[] = {
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 73 (0x49)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph73[] = {
	0x00,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 74 (0x4A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *** |
// |    * |
// |    * |
// |    * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph74[] = {
	0x00,
	0x00,
	0x38,
	0x08,
	0x08,
	0x08,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 75 (0x4B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*  *  |
// |* *   |
// |**    |
// |* *   |
// |*  *  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph75[] = {
	0x00,
	0x00,
	0x88,
	0x90,
	0xA0,
	0xC0,
	0xA0,
	0x90,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 76 (0x4C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*     |
// |*     |
// |*     |
// |*     |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph76[] = {
	0x00,
	0x00,
	0x80,
	0x80,
	0x80,
	0x80,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 77 (0x4D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |** ** |
// |* * * |
// |* * * |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph77[] = {
	0x00,
	0x00,
	0x88,
	0xD8,
	0xA8,
	0xA8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 78 (0x4E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |**  * |
// |**  * |
// |* * * |
// |*  ** |
// |*  ** |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph78[] = {
	0x00,
	0x00,
	0x88,
	0xC8,
	0xC8,
	0xA8,
	0x98,
	0x98,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 79 (0x4F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph79[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 80 (0x50)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |****  |
// |*   * |
// |*   * |
// |****  |
// |*     |
// |*     |
// |*     |
// |      |
// |      |
// |      |
// +------+
static const byte glyph80[] = {
	0x00,
	0x00,
	0xF0,
	0x88,
	0x88,
	0xF0,
	0x80,
	0x80,
	0x80,
	0x00,
	0x00,
	0x00
};

// Character 81 (0x51)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |   ** |
// |      |
// |      |
// +------+
static const byte glyph81[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x18,
	0x00,
	0x00
};

// Character 82 (0x52)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |****  |
// |*   * |
// |*   * |
// |****  |
// |* *   |
// |*  *  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph82[] = {
	0x00,
	0x00,
	0xF0,
	0x88,
	0x88,
	0xF0,
	0xA0,
	0x90,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 83 (0x53)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*     |
// | ***  |
// |    * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph83[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x80,
	0x70,
	0x08,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 84 (0x54)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph84[] = {
	0x00,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 85 (0x55)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph85[] = {
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 86 (0x56)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// | * *  |
// | * *  |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph86[] = {
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0x50,
	0x50,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 87 (0x57)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |* * * |
// |* * * |
// |** ** |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph87[] = {
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0xA8,
	0xA8,
	0xD8,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 88 (0x58)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*   * |
// | * *  |
// |  *   |
// | * *  |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph88[] = {
	0x00,
	0x00,
	0x88,
	0x88,
	0x50,
	0x20,
	0x50,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 89 (0x59)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*   * |
// | * *  |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph89[] = {
	0x00,
	0x00,
	0x88,
	0x88,
	0x50,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 90 (0x5A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |    * |
// |   *  |
// |  *   |
// | *    |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph90[] = {
	0x00,
	0x00,
	0xF8,
	0x08,
	0x10,
	0x20,
	0x40,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 91 (0x5B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *** |
// |      |
// +------+
static const byte glyph91[] = {
	0x38,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x38,
	0x00
};

// Character 92 (0x5C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |*     |
// |*     |
// | *    |
// | *    |
// |  *   |
// |  *   |
// |   *  |
// |   *  |
// |    * |
// |    * |
// |      |
// |      |
// +------+
static const byte glyph92[] = {
	0x80,
	0x80,
	0x40,
	0x40,
	0x20,
	0x20,
	0x10,
	0x10,
	0x08,
	0x08,
	0x00,
	0x00
};

// Character 93 (0x5D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | ***  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// | ***  |
// |      |
// +------+
static const byte glyph93[] = {
	0x70,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x70,
	0x00
};

// Character 94 (0x5E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |*   * |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph94[] = {
	0x00,
	0x20,
	0x50,
	0x88,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 95 (0x5F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |******|
// |      |
// |      |
// +------+
static const byte glyph95[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xFC,
	0x00,
	0x00
};

// Character 96 (0x60)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |   *  |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph96[] = {
	0x00,
	0x20,
	0x10,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 97 (0x61)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph97[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 98 (0x62)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*     |
// |*     |
// |*     |
// |****  |
// |*   * |
// |*   * |
// |*   * |
// |****  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph98[] = {
	0x00,
	0x80,
	0x80,
	0x80,
	0xF0,
	0x88,
	0x88,
	0x88,
	0xF0,
	0x00,
	0x00,
	0x00
};

// Character 99 (0x63)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*     |
// |*     |
// |*     |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph99[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x80,
	0x80,
	0x80,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 100 (0x64)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |    * |
// |    * |
// |    * |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph100[] = {
	0x00,
	0x08,
	0x08,
	0x08,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 101 (0x65)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph101[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 102 (0x66)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *** |
// | *    |
// | *    |
// |****  |
// | *    |
// | *    |
// | *    |
// | *    |
// |      |
// |      |
// |      |
// +------+
static const byte glyph102[] = {
	0x00,
	0x38,
	0x40,
	0x40,
	0xF0,
	0x40,
	0x40,
	0x40,
	0x40,
	0x00,
	0x00,
	0x00
};

// Character 103 (0x67)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph103[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 104 (0x68)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*     |
// |*     |
// |*     |
// |****  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph104[] = {
	0x00,
	0x80,
	0x80,
	0x80,
	0xF0,
	0x88,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 105 (0x69)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |  *   |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph105[] = {
	0x00,
	0x20,
	0x20,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 106 (0x6A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |    * |
// |    * |
// |      |
// |  *** |
// |    * |
// |    * |
// |    * |
// |    * |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph106[] = {
	0x00,
	0x08,
	0x08,
	0x00,
	0x38,
	0x08,
	0x08,
	0x08,
	0x08,
	0x08,
	0x08,
	0x70
};

// Character 107 (0x6B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// | *    |
// | *    |
// | *  * |
// | * *  |
// | **   |
// | * *  |
// | *  * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph107[] = {
	0x00,
	0x40,
	0x40,
	0x40,
	0x48,
	0x50,
	0x60,
	0x50,
	0x48,
	0x00,
	0x00,
	0x00
};

// Character 108 (0x6C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph108[] = {
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 109 (0x6D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |** *  |
// |* * * |
// |* * * |
// |* * * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph109[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xD0,
	0xA8,
	0xA8,
	0xA8,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 110 (0x6E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |* **  |
// |**  * |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph110[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xB0,
	0xC8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 111 (0x6F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph111[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 112 (0x70)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |****  |
// |*   * |
// |*   * |
// |*   * |
// |****  |
// |*     |
// |*     |
// |*     |
// +------+
static const byte glyph112[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xF0,
	0x88,
	0x88,
	0x88,
	0xF0,
	0x80,
	0x80,
	0x80
};

// Character 113 (0x71)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// |    * |
// +------+
static const byte glyph113[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x08
};

// Character 114 (0x72)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | * ** |
// | **   |
// | *    |
// | *    |
// | *    |
// |      |
// |      |
// |      |
// +------+
static const byte glyph114[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x58,
	0x60,
	0x40,
	0x40,
	0x40,
	0x00,
	0x00,
	0x00
};

// Character 115 (0x73)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*     |
// | ***  |
// |    * |
// |****  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph115[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x80,
	0x70,
	0x08,
	0xF0,
	0x00,
	0x00,
	0x00
};

// Character 116 (0x74)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |  *   |
// |  *   |
// |  *   |
// |   ** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph116[] = {
	0x00,
	0x20,
	0x20,
	0x20,
	0x70,
	0x20,
	0x20,
	0x20,
	0x18,
	0x00,
	0x00,
	0x00
};

// Character 117 (0x75)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph117[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 118 (0x76)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |** ** |
// | * *  |
// | * *  |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph118[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xD8,
	0x50,
	0x50,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 119 (0x77)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// |* * * |
// |* * * |
// |* * * |
// | * *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph119[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0xA8,
	0xA8,
	0xA8,
	0x50,
	0x00,
	0x00,
	0x00
};

// Character 120 (0x78)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// | * *  |
// |  *   |
// | * *  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph120[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x50,
	0x20,
	0x50,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 121 (0x79)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph121[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 122 (0x7A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |***** |
// |   *  |
// |  *   |
// | *    |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph122[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xF8,
	0x10,
	0x20,
	0x40,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 123 (0x7B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |    * |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |  *   |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |    * |
// |      |
// +------+
static const byte glyph123[] = {
	0x08,
	0x10,
	0x10,
	0x10,
	0x10,
	0x20,
	0x10,
	0x10,
	0x10,
	0x10,
	0x08,
	0x00
};

// Character 124 (0x7C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// +------+
static const byte glyph124[] = {
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00
};

// Character 125 (0x7D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *    |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |   *  |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph125[] = {
	0x40,
	0x20,
	0x20,
	0x20,
	0x20,
	0x10,
	0x20,
	0x20,
	0x20,
	0x20,
	0x40,
	0x00
};

// Character 126 (0x7E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | *    |
// |* * * |
// |   *  |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph126[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x40,
	0xA8,
	0x10,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 160 (0xA0)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph160[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 161 (0xA1)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |      |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph161[] = {
	0x00,
	0x20,
	0x00,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 162 (0xA2)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |  *   |
// | ***  |
// |* * * |
// |* *   |
// |* * * |
// | ***  |
// |  *   |
// |      |
// |      |
// +------+
static const byte glyph162[] = {
	0x00,
	0x00,
	0x00,
	0x20,
	0x70,
	0xA8,
	0xA0,
	0xA8,
	0x70,
	0x20,
	0x00,
	0x00
};

// Character 163 (0xA3)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  **  |
// | *  * |
// | *    |
// |***   |
// | *    |
// | *    |
// | *  * |
// |* **  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph163[] = {
	0x00,
	0x30,
	0x48,
	0x40,
	0xE0,
	0x40,
	0x40,
	0x48,
	0xB0,
	0x00,
	0x00,
	0x00
};

// Character 164 (0xA4)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// | ***  |
// | * *  |
// | ***  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph164[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x70,
	0x50,
	0x70,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 165 (0xA5)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// | * *  |
// |  *   |
// | ***  |
// |  *   |
// | ***  |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph165[] = {
	0x00,
	0x00,
	0x88,
	0x50,
	0x20,
	0x70,
	0x20,
	0x70,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 166 (0xA6)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph166[] = {
	0x00,
	0x00,
	0x20,
	0x20,
	0x20,
	0x00,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 167 (0xA7)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  **  |
// | *  * |
// | *    |
// |  **  |
// | *  * |
// | *  * |
// | *  * |
// |  **  |
// |    * |
// | *  * |
// |  **  |
// |      |
// +------+
static const byte glyph167[] = {
	0x30,
	0x48,
	0x40,
	0x30,
	0x48,
	0x48,
	0x48,
	0x30,
	0x08,
	0x48,
	0x30,
	0x00
};

// Character 168 (0xA8)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// | * *  |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph168[] = {
	0x00,
	0x50,
	0x50,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 169 (0xA9)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | **** |
// |*    *|
// |* ** *|
// |* *  *|
// |* *  *|
// |* ** *|
// |*    *|
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph169[] = {
	0x00,
	0x78,
	0x84,
	0xB4,
	0xA4,
	0xA4,
	0xB4,
	0x84,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 170 (0xAA)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  **  |
// |    * |
// |  *** |
// | *  * |
// |  *** |
// |      |
// | **** |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph170[] = {
	0x30,
	0x08,
	0x38,
	0x48,
	0x38,
	0x00,
	0x78,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 171 (0xAB)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |  * * |
// | * *  |
// |* *   |
// | * *  |
// |  * * |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph171[] = {
	0x00,
	0x00,
	0x00,
	0x28,
	0x50,
	0xA0,
	0x50,
	0x28,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 172 (0xAC)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// | **** |
// |    * |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph172[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 173 (0xAD)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// | **** |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph173[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 174 (0xAE)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | **** |
// |*    *|
// |* ** *|
// |* * **|
// |* ** *|
// |* * **|
// |*    *|
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph174[] = {
	0x00,
	0x78,
	0x84,
	0xB4,
	0xAC,
	0xB4,
	0xAC,
	0x84,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 175 (0xAF)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph175[] = {
	0x00,
	0x00,
	0xF8,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 176 (0xB0)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  **  |
// | *  * |
// | *  * |
// |  **  |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph176[] = {
	0x00,
	0x30,
	0x48,
	0x48,
	0x30,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 177 (0xB1)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// |  *   |
// |***** |
// |  *   |
// |  *   |
// |      |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph177[] = {
	0x00,
	0x00,
	0x20,
	0x20,
	0xF8,
	0x20,
	0x20,
	0x00,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 178 (0xB2)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | **   |
// |   *  |
// |  *   |
// | *    |
// | ***  |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph178[] = {
	0x60,
	0x10,
	0x20,
	0x40,
	0x70,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 179 (0xB3)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | **   |
// |   *  |
// |  *   |
// |   *  |
// | **   |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph179[] = {
	0x60,
	0x10,
	0x20,
	0x10,
	0x60,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 180 (0xB4)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph180[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 181 (0xB5)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |**  * |
// |* **  |
// |*     |
// |*     |
// |      |
// +------+
static const byte glyph181[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0xC8,
	0xB0,
	0x80,
	0x80,
	0x00
};

// Character 182 (0xB6)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | **** |
// |*** * |
// |*** * |
// | ** * |
// |  * * |
// |  * * |
// |  * * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph182[] = {
	0x00,
	0x00,
	0x78,
	0xE8,
	0xE8,
	0x68,
	0x28,
	0x28,
	0x28,
	0x00,
	0x00,
	0x00
};

// Character 183 (0xB7)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |  **  |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph183[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 184 (0xB8)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |   *  |
// |  *   |
// |      |
// +------+
static const byte glyph184[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x10,
	0x20,
	0x00
};

// Character 185 (0xB9)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph185[] = {
	0x20,
	0x60,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 186 (0xBA)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  **  |
// | *  * |
// | *  * |
// | *  * |
// |  **  |
// |      |
// | **** |
// |      |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph186[] = {
	0x30,
	0x48,
	0x48,
	0x48,
	0x30,
	0x00,
	0x78,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 187 (0xBB)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |* *   |
// | * *  |
// |  * * |
// | * *  |
// |* *   |
// |      |
// |      |
// |      |
// |      |
// +------+
static const byte glyph187[] = {
	0x00,
	0x00,
	0x00,
	0xA0,
	0x50,
	0x28,
	0x50,
	0xA0,
	0x00,
	0x00,
	0x00,
	0x00
};

// Character 188 (0xBC)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// | *    |
// | *    |
// | *  * |
// |   *  |
// |  * * |
// |  *** |
// |    * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph188[] = {
	0x00,
	0x40,
	0x40,
	0x40,
	0x48,
	0x10,
	0x28,
	0x38,
	0x08,
	0x00,
	0x00,
	0x00
};

// Character 189 (0xBD)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// | *    |
// | *    |
// | ***  |
// |    * |
// |   *  |
// |  *   |
// |  *** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph189[] = {
	0x00,
	0x40,
	0x40,
	0x40,
	0x70,
	0x08,
	0x10,
	0x20,
	0x38,
	0x00,
	0x00,
	0x00
};

// Character 190 (0xBE)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |**    |
// | *    |
// |  *   |
// |**  * |
// |   *  |
// |  * * |
// |  *** |
// |    * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph190[] = {
	0x00,
	0xC0,
	0x40,
	0x20,
	0xC8,
	0x10,
	0x28,
	0x38,
	0x08,
	0x00,
	0x00,
	0x00
};

// Character 191 (0xBF)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |      |
// |  *   |
// |  *   |
// | *    |
// |*     |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph191[] = {
	0x00,
	0x20,
	0x00,
	0x20,
	0x20,
	0x40,
	0x80,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 192 (0xC0)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *    |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph192[] = {
	0x40,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 193 (0xC1)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph193[] = {
	0x10,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 194 (0xC2)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph194[] = {
	0x20,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 195 (0xC3)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  * * |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph195[] = {
	0x28,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 196 (0xC4)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph196[] = {
	0x00,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 197 (0xC5)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |  *   |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph197[] = {
	0x20,
	0x50,
	0x20,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 198 (0xC6)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | **** |
// |* *   |
// |* *   |
// |* *** |
// |***   |
// |* *   |
// |* *** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph198[] = {
	0x00,
	0x00,
	0x78,
	0xA0,
	0xA0,
	0xB8,
	0xE0,
	0xA0,
	0xB8,
	0x00,
	0x00,
	0x00
};

// Character 199 (0xC7)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*     |
// |*     |
// |*     |
// |*   * |
// | ***  |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph199[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x80,
	0x80,
	0x80,
	0x88,
	0x70,
	0x20,
	0x40,
	0x00
};

// Character 200 (0xC8)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *    |
// |  *   |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph200[] = {
	0x40,
	0x20,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 201 (0xC9)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph201[] = {
	0x10,
	0x20,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 202 (0xCA)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph202[] = {
	0x20,
	0x50,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 203 (0xCB)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph203[] = {
	0x00,
	0x50,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 204 (0xCC)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *    |
// |  *   |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph204[] = {
	0x40,
	0x20,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 205 (0xCD)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph205[] = {
	0x10,
	0x20,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 206 (0xCE)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph206[] = {
	0x20,
	0x50,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 207 (0xCF)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph207[] = {
	0x00,
	0x50,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 208 (0xD0)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// | *  * |
// | *   *|
// |***  *|
// | *   *|
// | *  * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph208[] = {
	0x00,
	0x00,
	0x70,
	0x48,
	0x44,
	0xE4,
	0x44,
	0x48,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 209 (0xD1)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  * * |
// | * *  |
// |      |
// |*   * |
// |**  * |
// |* * * |
// |*  ** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph209[] = {
	0x28,
	0x50,
	0x00,
	0x88,
	0xC8,
	0xA8,
	0x98,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 210 (0xD2)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *    |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph210[] = {
	0x40,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 211 (0xD3)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph211[] = {
	0x10,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 212 (0xD4)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph212[] = {
	0x20,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 213 (0xD5)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  * * |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph213[] = {
	0x28,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 214 (0xD6)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph214[] = {
	0x00,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 215 (0xD7)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// | * *  |
// |  *   |
// | * *  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph215[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x50,
	0x20,
	0x50,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 216 (0xD8)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |    * |
// | **** |
// |*  ** |
// |* * * |
// |* * * |
// |* * * |
// |**  * |
// |****  |
// |*     |
// |      |
// |      |
// +------+
static const byte glyph216[] = {
	0x00,
	0x08,
	0x78,
	0x98,
	0xA8,
	0xA8,
	0xA8,
	0xC8,
	0xF0,
	0x80,
	0x00,
	0x00
};

// Character 217 (0xD9)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *    |
// |  *   |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph217[] = {
	0x40,
	0x20,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 218 (0xDA)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph218[] = {
	0x10,
	0x20,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 219 (0xDB)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph219[] = {
	0x20,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 220 (0xDC)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph220[] = {
	0x00,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 221 (0xDD)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |*   * |
// | * *  |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph221[] = {
	0x10,
	0x20,
	0x00,
	0x88,
	0x50,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 222 (0xDE)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*     |
// |****  |
// |*   * |
// |*   * |
// |*   * |
// |****  |
// |*     |
// |*     |
// |      |
// |      |
// |      |
// +------+
static const byte glyph222[] = {
	0x00,
	0x80,
	0xF0,
	0x88,
	0x88,
	0x88,
	0xF0,
	0x80,
	0x80,
	0x00,
	0x00,
	0x00
};

// Character 223 (0xDF)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  **  |
// | *  * |
// | *  * |
// |** *  |
// | * *  |
// | *  * |
// | *  * |
// | * *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph223[] = {
	0x00,
	0x30,
	0x48,
	0x48,
	0xD0,
	0x50,
	0x48,
	0x48,
	0x50,
	0x00,
	0x00,
	0x00
};

// Character 224 (0xE0)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// |  *   |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph224[] = {
	0x00,
	0x40,
	0x20,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 225 (0xE1)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph225[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 226 (0xE2)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph226[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 227 (0xE3)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  * * |
// | * *  |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph227[] = {
	0x00,
	0x28,
	0x50,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 228 (0xE4)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | * *  |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph228[] = {
	0x00,
	0x00,
	0x50,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 229 (0xE5)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |  *   |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph229[] = {
	0x20,
	0x50,
	0x20,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 230 (0xE6)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | ***  |
// |  * * |
// | ***  |
// |* *   |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph230[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x70,
	0x28,
	0x70,
	0xA0,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 231 (0xE7)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*     |
// |*     |
// |*     |
// | **** |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph231[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x80,
	0x80,
	0x80,
	0x78,
	0x20,
	0x40,
	0x00
};

// Character 232 (0xE8)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph232[] = {
	0x00,
	0x40,
	0x20,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 233 (0xE9)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph233[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 234 (0xEA)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph234[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 235 (0xEB)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph235[] = {
	0x00,
	0x00,
	0x50,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 236 (0xEC)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// |  *   |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph236[] = {
	0x00,
	0x40,
	0x20,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 237 (0xED)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | *    |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph237[] = {
	0x00,
	0x20,
	0x40,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 238 (0xEE)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph238[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 239 (0xEF)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | * *  |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph239[] = {
	0x00,
	0x00,
	0x50,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 240 (0xF0)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  * * |
// |   *  |
// |  * * |
// |    * |
// | **** |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph240[] = {
	0x00,
	0x28,
	0x10,
	0x28,
	0x08,
	0x78,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 241 (0xF1)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  * * |
// | * *  |
// |      |
// |* **  |
// |**  * |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph241[] = {
	0x00,
	0x28,
	0x50,
	0x00,
	0xB0,
	0xC8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 242 (0xF2)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph242[] = {
	0x00,
	0x40,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 243 (0xF3)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph243[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 244 (0xF4)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph244[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 245 (0xF5)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  * * |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph245[] = {
	0x00,
	0x28,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 246 (0xF6)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph246[] = {
	0x00,
	0x00,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 247 (0xF7)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |  *   |
// |      |
// |***** |
// |      |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph247[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0xF8,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 248 (0xF8)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |    * |
// | **** |
// |*  ** |
// |* * * |
// |**  * |
// |****  |
// |*     |
// |      |
// |      |
// +------+
static const byte glyph248[] = {
	0x00,
	0x00,
	0x00,
	0x08,
	0x78,
	0x98,
	0xA8,
	0xC8,
	0xF0,
	0x80,
	0x00,
	0x00
};

// Character 249 (0xF9)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// |  *   |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph249[] = {
	0x00,
	0x40,
	0x20,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 250 (0xFA)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph250[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 251 (0xFB)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph251[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 252 (0xFC)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph252[] = {
	0x00,
	0x00,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 253 (0xFD)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph253[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 254 (0xFE)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*     |
// |*     |
// |*     |
// |* **  |
// |**  * |
// |*   * |
// |**  * |
// |* **  |
// |*     |
// |*     |
// |      |
// +------+
static const byte glyph254[] = {
	0x00,
	0x80,
	0x80,
	0x80,
	0xB0,
	0xC8,
	0x88,
	0xC8,
	0xB0,
	0x80,
	0x80,
	0x00
};

// Character 255 (0xFF)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph255[] = {
	0x00,
	0x00,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 256 (0x100)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |***** |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph256[] = {
	0x00,
	0xF8,
	0x00,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 257 (0x101)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph257[] = {
	0x00,
	0x00,
	0xF8,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 258 (0x102)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |*   * |
// | ***  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph258[] = {
	0x88,
	0x70,
	0x00,
	0x70,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 259 (0x103)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*   * |
// | ***  |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph259[] = {
	0x00,
	0x88,
	0x70,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 260 (0x104)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// | * *  |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |   *  |
// |   ** |
// |      |
// +------+
static const byte glyph260[] = {
	0x00,
	0x00,
	0x20,
	0x50,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x10,
	0x18,
	0x00
};

// Character 261 (0x105)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |   *  |
// |    * |
// |      |
// +------+
static const byte glyph261[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x88,
	0x88,
	0x98,
	0x68,
	0x10,
	0x08,
	0x00
};

// Character 262 (0x106)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*     |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph262[] = {
	0x10,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0x80,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 263 (0x107)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// | **** |
// |*     |
// |*     |
// |*     |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph263[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x78,
	0x80,
	0x80,
	0x80,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 264 (0x108)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*     |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph264[] = {
	0x20,
	0x50,
	0x00,
	0x70,
	0x88,
	0x88,
	0x80,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 265 (0x109)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// | **** |
// |*     |
// |*     |
// |*     |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph265[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x78,
	0x80,
	0x80,
	0x80,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 266 (0x10A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*     |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph266[] = {
	0x00,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0x80,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 267 (0x10B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// |      |
// | **** |
// |*     |
// |*     |
// |*     |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph267[] = {
	0x00,
	0x00,
	0x20,
	0x00,
	0x78,
	0x80,
	0x80,
	0x80,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 268 (0x10C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*     |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph268[] = {
	0x50,
	0x20,
	0x00,
	0x70,
	0x88,
	0x88,
	0x80,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 269 (0x10D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |  *   |
// |      |
// | **** |
// |*     |
// |*     |
// |*     |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph269[] = {
	0x00,
	0x50,
	0x20,
	0x00,
	0x78,
	0x80,
	0x80,
	0x80,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 270 (0x10E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |***   |
// |*  *  |
// |*   * |
// |*   * |
// |*  *  |
// |***   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph270[] = {
	0x50,
	0x20,
	0x00,
	0xE0,
	0x90,
	0x88,
	0x88,
	0x90,
	0xE0,
	0x00,
	0x00,
	0x00
};

// Character 271 (0x10F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |    * |
// |    * |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph271[] = {
	0x50,
	0x20,
	0x08,
	0x08,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 272 (0x110)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// | *  * |
// | *   *|
// |***  *|
// | *   *|
// | *  * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph272[] = {
	0x00,
	0x00,
	0x70,
	0x48,
	0x44,
	0xE4,
	0x44,
	0x48,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 273 (0x111)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *** |
// |   *  |
// | ***  |
// |*  *  |
// |*  *  |
// |*  *  |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph273[] = {
	0x00,
	0x10,
	0x38,
	0x10,
	0x70,
	0x90,
	0x90,
	0x90,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 274 (0x112)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |***** |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph274[] = {
	0x00,
	0xF8,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 275 (0x113)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph275[] = {
	0x00,
	0x00,
	0xF8,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 276 (0x114)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |*   * |
// | ***  |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph276[] = {
	0x88,
	0x70,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 277 (0x115)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*   * |
// | ***  |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph277[] = {
	0x00,
	0x88,
	0x70,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 278 (0x116)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph278[] = {
	0x00,
	0x20,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 279 (0x117)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph279[] = {
	0x00,
	0x00,
	0x20,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 280 (0x118)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |  *   |
// |   *  |
// |      |
// +------+
static const byte glyph280[] = {
	0x00,
	0x00,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x20,
	0x10,
	0x00
};

// Character 281 (0x119)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// | *    |
// |  *   |
// |      |
// +------+
static const byte glyph281[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x40,
	0x20,
	0x00
};

// Character 282 (0x11A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |***** |
// |*     |
// |****  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph282[] = {
	0x50,
	0x20,
	0x00,
	0xF8,
	0x80,
	0xF0,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 283 (0x11B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |***** |
// |*     |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph283[] = {
	0x00,
	0x50,
	0x20,
	0x00,
	0x70,
	0x88,
	0xF8,
	0x80,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 284 (0x11C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// | ***  |
// |*   * |
// |*     |
// |*  ** |
// |*   * |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph284[] = {
	0x20,
	0x50,
	0x00,
	0x70,
	0x88,
	0x80,
	0x98,
	0x88,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 285 (0x11D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph285[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 286 (0x11E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |*   * |
// | ***  |
// |      |
// | ***  |
// |*   * |
// |*     |
// |*  ** |
// |*   * |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph286[] = {
	0x88,
	0x70,
	0x00,
	0x70,
	0x88,
	0x80,
	0x98,
	0x88,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 287 (0x11F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*   * |
// | ***  |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph287[] = {
	0x00,
	0x88,
	0x70,
	0x00,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 288 (0x120)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |      |
// | ***  |
// |*   * |
// |*     |
// |*  ** |
// |*   * |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph288[] = {
	0x00,
	0x20,
	0x00,
	0x70,
	0x88,
	0x80,
	0x98,
	0x88,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 289 (0x121)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph289[] = {
	0x00,
	0x00,
	0x20,
	0x00,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 290 (0x122)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*     |
// |*  ** |
// |*   * |
// |*   * |
// | **** |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph290[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x80,
	0x98,
	0x88,
	0x88,
	0x78,
	0x20,
	0x40,
	0x00
};

// Character 291 (0x123)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |  **  |
// |      |
// | **** |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph291[] = {
	0x10,
	0x20,
	0x30,
	0x00,
	0x78,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 292 (0x124)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |***** |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph292[] = {
	0x20,
	0x50,
	0x00,
	0x88,
	0x88,
	0xF8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 293 (0x125)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// |*     |
// |*     |
// |****  |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph293[] = {
	0x20,
	0x50,
	0x00,
	0x80,
	0x80,
	0xF0,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 294 (0x126)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | *  * |
// |******|
// | *  * |
// | **** |
// | *  * |
// | *  * |
// | *  * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph294[] = {
	0x00,
	0x00,
	0x48,
	0xFC,
	0x48,
	0x78,
	0x48,
	0x48,
	0x48,
	0x00,
	0x00,
	0x00
};

// Character 295 (0x127)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *    |
// |***** |
// | *    |
// | **** |
// | *   *|
// | *   *|
// | *   *|
// | *   *|
// |      |
// |      |
// |      |
// +------+
static const byte glyph295[] = {
	0x00,
	0x40,
	0xF8,
	0x40,
	0x78,
	0x44,
	0x44,
	0x44,
	0x44,
	0x00,
	0x00,
	0x00
};

// Character 296 (0x128)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  * * |
// | * *  |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph296[] = {
	0x28,
	0x50,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 297 (0x129)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  * * |
// | * *  |
// |      |
// |  **  |
// |   *  |
// |   *  |
// |   *  |
// |  *** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph297[] = {
	0x00,
	0x28,
	0x50,
	0x00,
	0x30,
	0x10,
	0x10,
	0x10,
	0x38,
	0x00,
	0x00,
	0x00
};

// Character 298 (0x12A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |***** |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph298[] = {
	0x00,
	0xF8,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 299 (0x12B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph299[] = {
	0x00,
	0x00,
	0xF8,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 300 (0x12C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |*   * |
// | ***  |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph300[] = {
	0x88,
	0x70,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 301 (0x12D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*   * |
// | ***  |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph301[] = {
	0x00,
	0x88,
	0x70,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 302 (0x12E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |  *   |
// |   *  |
// |      |
// +------+
static const byte glyph302[] = {
	0x00,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x20,
	0x10,
	0x00
};

// Character 303 (0x12F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |  *   |
// |   *  |
// |      |
// +------+
static const byte glyph303[] = {
	0x00,
	0x00,
	0x20,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x20,
	0x10,
	0x00
};

// Character 304 (0x130)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph304[] = {
	0x00,
	0x20,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 305 (0x131)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph305[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 306 (0x132)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |*   * |
// |*   * |
// |*   * |
// |* * * |
// |* * * |
// |*  *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph306[] = {
	0x00,
	0x00,
	0xF8,
	0x88,
	0x88,
	0x88,
	0xA8,
	0xA8,
	0x90,
	0x00,
	0x00,
	0x00
};

// Character 307 (0x133)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | *  * |
// |      |
// |** ** |
// | *  * |
// | *  * |
// | *  * |
// |*** * |
// |    * |
// | *  * |
// |  **  |
// +------+
static const byte glyph307[] = {
	0x00,
	0x00,
	0x48,
	0x00,
	0xD8,
	0x48,
	0x48,
	0x48,
	0xE8,
	0x08,
	0x48,
	0x30
};

// Character 308 (0x134)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  * * |
// |      |
// |  *** |
// |    * |
// |    * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph308[] = {
	0x10,
	0x28,
	0x00,
	0x38,
	0x08,
	0x08,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 309 (0x135)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  * * |
// |      |
// | ***  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |   *  |
// |***   |
// +------+
static const byte glyph309[] = {
	0x00,
	0x10,
	0x28,
	0x00,
	0x70,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0x10,
	0xE0
};

// Character 310 (0x136)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |*  *  |
// |* *   |
// |**    |
// |* *   |
// |*  *  |
// |*   * |
// | *    |
// |**    |
// |      |
// +------+
static const byte glyph310[] = {
	0x00,
	0x00,
	0x88,
	0x90,
	0xA0,
	0xC0,
	0xA0,
	0x90,
	0x88,
	0x40,
	0xC0,
	0x00
};

// Character 311 (0x137)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | *    |
// | *    |
// | *  * |
// | * *  |
// | **   |
// | * *  |
// | *  * |
// |  *   |
// | **   |
// |      |
// +------+
static const byte glyph311[] = {
	0x00,
	0x00,
	0x40,
	0x40,
	0x48,
	0x50,
	0x60,
	0x50,
	0x48,
	0x20,
	0x60,
	0x00
};

// Character 312 (0x138)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// |*  *  |
// |***   |
// |*  *  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph312[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x90,
	0xE0,
	0x90,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 313 (0x139)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | *    |
// |      |
// |*     |
// |*     |
// |*     |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph313[] = {
	0x20,
	0x40,
	0x00,
	0x80,
	0x80,
	0x80,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 314 (0x13A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |   *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph314[] = {
	0x10,
	0x20,
	0x00,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x10,
	0x00,
	0x00,
	0x00
};

// Character 315 (0x13B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*     |
// |*     |
// |*     |
// |*     |
// |*     |
// |*     |
// |***** |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph315[] = {
	0x00,
	0x00,
	0x80,
	0x80,
	0x80,
	0x80,
	0x80,
	0x80,
	0xF8,
	0x20,
	0x40,
	0x00
};

// Character 316 (0x13C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// | ***  |
// |  *   |
// | *    |
// |      |
// +------+
static const byte glyph316[] = {
	0x00,
	0x60,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x70,
	0x20,
	0x40,
	0x00
};

// Character 317 (0x13D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |*     |
// |*     |
// |*     |
// |*     |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph317[] = {
	0x50,
	0x20,
	0x80,
	0x80,
	0x80,
	0x80,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 318 (0x13E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |   *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph318[] = {
	0x50,
	0x20,
	0x00,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x10,
	0x00,
	0x00,
	0x00
};

// Character 319 (0x13F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*     |
// |*     |
// |*     |
// |*  *  |
// |*     |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph319[] = {
	0x00,
	0x00,
	0x80,
	0x80,
	0x80,
	0x90,
	0x80,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 320 (0x140)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |**    |
// | *    |
// | *    |
// | *    |
// | *  * |
// | *    |
// | *    |
// |***   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph320[] = {
	0x00,
	0xC0,
	0x40,
	0x40,
	0x40,
	0x48,
	0x40,
	0x40,
	0xE0,
	0x00,
	0x00,
	0x00
};

// Character 321 (0x141)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | *    |
// | *    |
// | **   |
// |**    |
// | *    |
// | *    |
// | *****|
// |      |
// |      |
// |      |
// +------+
static const byte glyph321[] = {
	0x00,
	0x00,
	0x40,
	0x40,
	0x60,
	0xC0,
	0x40,
	0x40,
	0x7C,
	0x00,
	0x00,
	0x00
};

// Character 322 (0x142)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | **   |
// |  *   |
// |  *   |
// |  **  |
// | **   |
// |  *   |
// |  *   |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph322[] = {
	0x00,
	0x60,
	0x20,
	0x20,
	0x30,
	0x60,
	0x20,
	0x20,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 323 (0x143)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |*   * |
// |**  * |
// |* * * |
// |*  ** |
// |*  ** |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph323[] = {
	0x10,
	0x20,
	0x00,
	0x88,
	0xC8,
	0xA8,
	0x98,
	0x98,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 324 (0x144)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// |* **  |
// |**  * |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph324[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0xB0,
	0xC8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 325 (0x145)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |**  * |
// |**  * |
// |* * * |
// |*  ** |
// |*  ** |
// |*   * |
// | *    |
// |**    |
// |      |
// +------+
static const byte glyph325[] = {
	0x00,
	0x00,
	0x88,
	0xC8,
	0xC8,
	0xA8,
	0x98,
	0x98,
	0x88,
	0x40,
	0xC0,
	0x00
};

// Character 326 (0x146)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |* **  |
// |**  * |
// |*   * |
// |*   * |
// |*   * |
// | *    |
// |**    |
// |      |
// +------+
static const byte glyph326[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xB0,
	0xC8,
	0x88,
	0x88,
	0x88,
	0x40,
	0xC0,
	0x00
};

// Character 327 (0x147)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |*   * |
// |**  * |
// |* * * |
// |*  ** |
// |*  ** |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph327[] = {
	0x50,
	0x20,
	0x00,
	0x88,
	0xC8,
	0xA8,
	0x98,
	0x98,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 328 (0x148)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |  *   |
// |      |
// |* **  |
// |**  * |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph328[] = {
	0x00,
	0x50,
	0x20,
	0x00,
	0xB0,
	0xC8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 329 (0x149)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |**    |
// | *    |
// |*     |
// |      |
// |* **  |
// |**  * |
// |*   * |
// |*   * |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph329[] = {
	0xC0,
	0x40,
	0x80,
	0x00,
	0xB0,
	0xC8,
	0x88,
	0x88,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 330 (0x14A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |*   * |
// |**  * |
// |**  * |
// |* * * |
// |*  ** |
// |*  ** |
// |*   * |
// |    * |
// |  **  |
// |      |
// +------+
static const byte glyph330[] = {
	0x00,
	0x00,
	0x88,
	0xC8,
	0xC8,
	0xA8,
	0x98,
	0x98,
	0x88,
	0x08,
	0x30,
	0x00
};

// Character 331 (0x14B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |* **  |
// |**  * |
// |*   * |
// |*   * |
// |*   * |
// |    * |
// |  **  |
// |      |
// +------+
static const byte glyph331[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0xB0,
	0xC8,
	0x88,
	0x88,
	0x88,
	0x08,
	0x30,
	0x00
};

// Character 332 (0x14C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |***** |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph332[] = {
	0x00,
	0xF8,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 333 (0x14D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph333[] = {
	0x00,
	0x00,
	0xF8,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 334 (0x14E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |*   * |
// | ***  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph334[] = {
	0x88,
	0x70,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 335 (0x14F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*   * |
// | ***  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph335[] = {
	0x00,
	0x88,
	0x70,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 336 (0x150)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *  * |
// |*  *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph336[] = {
	0x48,
	0x90,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 337 (0x151)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *  * |
// |*  *  |
// |      |
// | ***  |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph337[] = {
	0x00,
	0x48,
	0x90,
	0x00,
	0x70,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 338 (0x152)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | **** |
// |* *   |
// |* *   |
// |* **  |
// |* *   |
// |* *   |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph338[] = {
	0x00,
	0x00,
	0x78,
	0xA0,
	0xA0,
	0xB0,
	0xA0,
	0xA0,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 339 (0x153)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | ***  |
// |* * * |
// |* *** |
// |* *   |
// | **** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph339[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x70,
	0xA8,
	0xB8,
	0xA0,
	0x78,
	0x00,
	0x00,
	0x00
};

// Character 340 (0x154)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |****  |
// |*   * |
// |****  |
// |* *   |
// |*  *  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph340[] = {
	0x10,
	0x20,
	0x00,
	0xF0,
	0x88,
	0xF0,
	0xA0,
	0x90,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 341 (0x155)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// | * ** |
// | **   |
// | *    |
// | *    |
// | *    |
// |      |
// |      |
// |      |
// +------+
static const byte glyph341[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x58,
	0x60,
	0x40,
	0x40,
	0x40,
	0x00,
	0x00,
	0x00
};

// Character 342 (0x156)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |****  |
// |*   * |
// |*   * |
// |****  |
// |* *   |
// |*  *  |
// |*   * |
// | *    |
// |**    |
// |      |
// +------+
static const byte glyph342[] = {
	0x00,
	0x00,
	0xF0,
	0x88,
	0x88,
	0xF0,
	0xA0,
	0x90,
	0x88,
	0x40,
	0xC0,
	0x00
};

// Character 343 (0x157)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | * ** |
// | **   |
// | *    |
// | *    |
// | *    |
// |  *   |
// | **   |
// |      |
// +------+
static const byte glyph343[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x58,
	0x60,
	0x40,
	0x40,
	0x40,
	0x20,
	0x60,
	0x00
};

// Character 344 (0x158)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |****  |
// |*   * |
// |****  |
// |* *   |
// |*  *  |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph344[] = {
	0x50,
	0x20,
	0x00,
	0xF0,
	0x88,
	0xF0,
	0xA0,
	0x90,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 345 (0x159)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  * * |
// |   *  |
// |      |
// | * ** |
// | **   |
// | *    |
// | *    |
// | *    |
// |      |
// |      |
// |      |
// +------+
static const byte glyph345[] = {
	0x00,
	0x28,
	0x10,
	0x00,
	0x58,
	0x60,
	0x40,
	0x40,
	0x40,
	0x00,
	0x00,
	0x00
};

// Character 346 (0x15A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// | ***  |
// |*     |
// | ***  |
// |    * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph346[] = {
	0x10,
	0x20,
	0x00,
	0x70,
	0x80,
	0x70,
	0x08,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 347 (0x15B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// | **** |
// |*     |
// | ***  |
// |    * |
// |****  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph347[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0x78,
	0x80,
	0x70,
	0x08,
	0xF0,
	0x00,
	0x00,
	0x00
};

// Character 348 (0x15C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// | ***  |
// |*     |
// | ***  |
// |    * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph348[] = {
	0x20,
	0x50,
	0x00,
	0x70,
	0x80,
	0x70,
	0x08,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 349 (0x15D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// | **** |
// |*     |
// | ***  |
// |    * |
// |****  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph349[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x78,
	0x80,
	0x70,
	0x08,
	0xF0,
	0x00,
	0x00,
	0x00
};

// Character 350 (0x15E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// | ***  |
// |*   * |
// |*     |
// | ***  |
// |    * |
// |*   * |
// | ***  |
// |  *   |
// | **   |
// |      |
// +------+
static const byte glyph350[] = {
	0x00,
	0x00,
	0x70,
	0x88,
	0x80,
	0x70,
	0x08,
	0x88,
	0x70,
	0x20,
	0x60,
	0x00
};

// Character 351 (0x15F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// | **** |
// |*     |
// | ***  |
// |    * |
// |****  |
// |  *   |
// | **   |
// |      |
// +------+
static const byte glyph351[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x78,
	0x80,
	0x70,
	0x08,
	0xF0,
	0x20,
	0x60,
	0x00
};

// Character 352 (0x160)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// | ***  |
// |*     |
// | ***  |
// |    * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph352[] = {
	0x50,
	0x20,
	0x00,
	0x70,
	0x80,
	0x70,
	0x08,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 353 (0x161)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |  *   |
// |      |
// | **** |
// |*     |
// | ***  |
// |    * |
// |****  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph353[] = {
	0x00,
	0x50,
	0x20,
	0x00,
	0x78,
	0x80,
	0x70,
	0x08,
	0xF0,
	0x00,
	0x00,
	0x00
};

// Character 354 (0x162)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |   *  |
// |  **  |
// |      |
// +------+
static const byte glyph354[] = {
	0x00,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x10,
	0x30,
	0x00
};

// Character 355 (0x163)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |   ** |
// |   *  |
// |  **  |
// |      |
// +------+
static const byte glyph355[] = {
	0x00,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x18,
	0x10,
	0x30,
	0x00
};

// Character 356 (0x164)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |***** |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph356[] = {
	0x50,
	0x20,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 357 (0x165)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |  *   |
// |  *   |
// |***** |
// |  *   |
// |  *   |
// |   ** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph357[] = {
	0x50,
	0x20,
	0x00,
	0x20,
	0x20,
	0xF8,
	0x20,
	0x20,
	0x18,
	0x00,
	0x00,
	0x00
};

// Character 358 (0x166)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |  *   |
// |  *   |
// | ***  |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph358[] = {
	0x00,
	0x00,
	0xF8,
	0x20,
	0x20,
	0x70,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 359 (0x167)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |  *   |
// |  *   |
// |***** |
// |  *   |
// | ***  |
// |  *   |
// |   ** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph359[] = {
	0x00,
	0x20,
	0x20,
	0x20,
	0xF8,
	0x20,
	0x70,
	0x20,
	0x18,
	0x00,
	0x00,
	0x00
};

// Character 360 (0x168)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  * * |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph360[] = {
	0x28,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 361 (0x169)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  * * |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph361[] = {
	0x00,
	0x28,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 362 (0x16A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |***** |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph362[] = {
	0x00,
	0xF8,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 363 (0x16B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |***** |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph363[] = {
	0x00,
	0x00,
	0xF8,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 364 (0x16C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |*   * |
// | ***  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph364[] = {
	0x88,
	0x70,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 365 (0x16D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |*   * |
// | ***  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph365[] = {
	0x00,
	0x88,
	0x70,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 366 (0x16E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |  *   |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph366[] = {
	0x20,
	0x50,
	0x20,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 367 (0x16F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |  *   |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph367[] = {
	0x00,
	0x20,
	0x50,
	0x20,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 368 (0x170)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | *  * |
// |*  *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph368[] = {
	0x48,
	0x90,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x00,
	0x00,
	0x00
};

// Character 369 (0x171)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | *  * |
// |*  *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph369[] = {
	0x00,
	0x48,
	0x90,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x00,
	0x00,
	0x00
};

// Character 370 (0x172)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | ***  |
// | *    |
// |  *   |
// |      |
// +------+
static const byte glyph370[] = {
	0x00,
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x88,
	0x70,
	0x40,
	0x20,
	0x00
};

// Character 371 (0x173)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |      |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*  ** |
// | ** * |
// |   *  |
// |    * |
// |      |
// +------+
static const byte glyph371[] = {
	0x00,
	0x00,
	0x00,
	0x00,
	0x88,
	0x88,
	0x88,
	0x98,
	0x68,
	0x10,
	0x08,
	0x00
};

// Character 372 (0x174)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |* * * |
// |* * * |
// |** ** |
// |*   * |
// |      |
// |      |
// |      |
// +------+
static const byte glyph372[] = {
	0x20,
	0x50,
	0x00,
	0x88,
	0x88,
	0xA8,
	0xA8,
	0xD8,
	0x88,
	0x00,
	0x00,
	0x00
};

// Character 373 (0x175)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// |*   * |
// |* * * |
// |* * * |
// |* * * |
// | * *  |
// |      |
// |      |
// |      |
// +------+
static const byte glyph373[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x88,
	0xA8,
	0xA8,
	0xA8,
	0x50,
	0x00,
	0x00,
	0x00
};

// Character 374 (0x176)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |  *   |
// | * *  |
// |      |
// |*   * |
// | * *  |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph374[] = {
	0x20,
	0x50,
	0x00,
	0x88,
	0x50,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 375 (0x177)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// | * *  |
// |      |
// |*   * |
// |*   * |
// |*   * |
// |*   * |
// | **** |
// |    * |
// |    * |
// | ***  |
// +------+
static const byte glyph375[] = {
	0x00,
	0x20,
	0x50,
	0x00,
	0x88,
	0x88,
	0x88,
	0x88,
	0x78,
	0x08,
	0x08,
	0x70
};

// Character 376 (0x178)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |      |
// |*   * |
// | * *  |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph376[] = {
	0x00,
	0x50,
	0x00,
	0x88,
	0x50,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Character 377 (0x179)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |   *  |
// |  *   |
// |      |
// |***** |
// |   *  |
// |  *   |
// | *    |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph377[] = {
	0x10,
	0x20,
	0x00,
	0xF8,
	0x10,
	0x20,
	0x40,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 378 (0x17A)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   *  |
// |  *   |
// |      |
// |***** |
// |   *  |
// |  *   |
// | *    |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph378[] = {
	0x00,
	0x10,
	0x20,
	0x00,
	0xF8,
	0x10,
	0x20,
	0x40,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 379 (0x17B)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |  *   |
// |      |
// |***** |
// |   *  |
// |  *   |
// | *    |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph379[] = {
	0x00,
	0x20,
	0x00,
	0xF8,
	0x10,
	0x20,
	0x40,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 380 (0x17C)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |      |
// |  *   |
// |      |
// |***** |
// |   *  |
// |  *   |
// | *    |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph380[] = {
	0x00,
	0x00,
	0x20,
	0x00,
	0xF8,
	0x10,
	0x20,
	0x40,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 381 (0x17D)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// | * *  |
// |  *   |
// |      |
// |***** |
// |   *  |
// |  *   |
// | *    |
// |*     |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph381[] = {
	0x50,
	0x20,
	0x00,
	0xF8,
	0x10,
	0x20,
	0x40,
	0x80,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 382 (0x17E)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// | * *  |
// |  *   |
// |      |
// |***** |
// |   *  |
// |  *   |
// | *    |
// |***** |
// |      |
// |      |
// |      |
// +------+
static const byte glyph382[] = {
	0x00,
	0x50,
	0x20,
	0x00,
	0xF8,
	0x10,
	0x20,
	0x40,
	0xF8,
	0x00,
	0x00,
	0x00
};

// Character 383 (0x17F)
// Box: 6 12 0 -3
// Advance: 6
//
// +------+
// |      |
// |   ** |
// |  *   |
// |  *   |
// | **   |
// |  *   |
// |  *   |
// |  *   |
// |  *   |
// |      |
// |      |
// |      |
// +------+
static const byte glyph383[] = {
	0x00,
	0x18,
	0x20,
	0x20,
	0x60,
	0x20,
	0x20,
	0x20,
	0x20,
	0x00,
	0x00,
	0x00
};

// Bitmap pointer table
const byte *const bitmapTable[] = {
	glyph0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	glyph32,
	glyph33,
	glyph34,
	glyph35,
	glyph36,
	glyph37,
	glyph38,
	glyph39,
	glyph40,
	glyph41,
	glyph42,
	glyph43,
	glyph44,
	glyph45,
	glyph46,
	glyph47,
	glyph48,
	glyph49,
	glyph50,
	glyph51,
	glyph52,
	glyph53,
	glyph54,
	glyph55,
	glyph56,
	glyph57,
	glyph58,
	glyph59,
	glyph60,
	glyph61,
	glyph62,
	glyph63,
	glyph64,
	glyph65,
	glyph66,
	glyph67,
	glyph68,
	glyph69,
	glyph70,
	glyph71,
	glyph72,
	glyph73,
	glyph74,
	glyph75,
	glyph76,
	glyph77,
	glyph78,
	glyph79,
	glyph80,
	glyph81,
	glyph82,
	glyph83,
	glyph84,
	glyph85,
	glyph86,
	glyph87,
	glyph88,
	glyph89,
	glyph90,
	glyph91,
	glyph92,
	glyph93,
	glyph94,
	glyph95,
	glyph96,
	glyph97,
	glyph98,
	glyph99,
	glyph100,
	glyph101,
	glyph102,
	glyph103,
	glyph104,
	glyph105,
	glyph106,
	glyph107,
	glyph108,
	glyph109,
	glyph110,
	glyph111,
	glyph112,
	glyph113,
	glyph114,
	glyph115,
	glyph116,
	glyph117,
	glyph118,
	glyph119,
	glyph120,
	glyph121,
	glyph122,
	glyph123,
	glyph124,
	glyph125,
	glyph126,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	glyph160,
	glyph161,
	glyph162,
	glyph163,
	glyph164,
	glyph165,
	glyph166,
	glyph167,
	glyph168,
	glyph169,
	glyph170,
	glyph171,
	glyph172,
	glyph173,
	glyph174,
	glyph175,
	glyph176,
	glyph177,
	glyph178,
	glyph179,
	glyph180,
	glyph181,
	glyph182,
	glyph183,
	glyph184,
	glyph185,
	glyph186,
	glyph187,
	glyph188,
	glyph189,
	glyph190,
	glyph191,
	glyph192,
	glyph193,
	glyph194,
	glyph195,
	glyph196,
	glyph197,
	glyph198,
	glyph199,
	glyph200,
	glyph201,
	glyph202,
	glyph203,
	glyph204,
	glyph205,
	glyph206,
	glyph207,
	glyph208,
	glyph209,
	glyph210,
	glyph211,
	glyph212,
	glyph213,
	glyph214,
	glyph215,
	glyph216,
	glyph217,
	glyph218,
	glyph219,
	glyph220,
	glyph221,
	glyph222,
	glyph223,
	glyph224,
	glyph225,
	glyph226,
	glyph227,
	glyph228,
	glyph229,
	glyph230,
	glyph231,
	glyph232,
	glyph233,
	glyph234,
	glyph235,
	glyph236,
	glyph237,
	glyph238,
	glyph239,
	glyph240,
	glyph241,
	glyph242,
	glyph243,
	glyph244,
	glyph245,
	glyph246,
	glyph247,
	glyph248,
	glyph249,
	glyph250,
	glyph251,
	glyph252,
	glyph253,
	glyph254,
	glyph255,
	glyph256,
	glyph257,
	glyph258,
	glyph259,
	glyph260,
	glyph261,
	glyph262,
	glyph263,
	glyph264,
	glyph265,
	glyph266,
	glyph267,
	glyph268,
	glyph269,
	glyph270,
	glyph271,
	glyph272,
	glyph273,
	glyph274,
	glyph275,
	glyph276,
	glyph277,
	glyph278,
	glyph279,
	glyph280,
	glyph281,
	glyph282,
	glyph283,
	glyph284,
	glyph285,
	glyph286,
	glyph287,
	glyph288,
	glyph289,
	glyph290,
	glyph291,
	glyph292,
	glyph293,
	glyph294,
	glyph295,
	glyph296,
	glyph297,
	glyph298,
	glyph299,
	glyph300,
	glyph301,
	glyph302,
	glyph303,
	glyph304,
	glyph305,
	glyph306,
	glyph307,
	glyph308,
	glyph309,
	glyph310,
	glyph311,
	glyph312,
	glyph313,
	glyph314,
	glyph315,
	glyph316,
	glyph317,
	glyph318,
	glyph319,
	glyph320,
	glyph321,
	glyph322,
	glyph323,
	glyph324,
	glyph325,
	glyph326,
	glyph327,
	glyph328,
	glyph329,
	glyph330,
	glyph331,
	glyph332,
	glyph333,
	glyph334,
	glyph335,
	glyph336,
	glyph337,
	glyph338,
	glyph339,
	glyph340,
	glyph341,
	glyph342,
	glyph343,
	glyph344,
	glyph345,
	glyph346,
	glyph347,
	glyph348,
	glyph349,
	glyph350,
	glyph351,
	glyph352,
	glyph353,
	glyph354,
	glyph355,
	glyph356,
	glyph357,
	glyph358,
	glyph359,
	glyph360,
	glyph361,
	glyph362,
	glyph363,
	glyph364,
	glyph365,
	glyph366,
	glyph367,
	glyph368,
	glyph369,
	glyph370,
	glyph371,
	glyph372,
	glyph373,
	glyph374,
	glyph375,
	glyph376,
	glyph377,
	glyph378,
	glyph379,
	glyph380,
	glyph381,
	glyph382,
	glyph383
};

// Font structure
static const BdfFontData desc = {
	"Clean", // Family name
	"R", // Slant
	6, // Max advance
	12, // Height
	12, // Size
	{ 6, 12, 0, -3 }, // Bounding box
	9, // Ascent

	0, // First character
	0, // Default character
	384, // Characters

	bitmapTable, // Bitmaps
	0, // Advances
	0 // Boxes
};

DEFINE_FONT(g_sysfont)

} // End of namespace Graphics
