static const char *const k1IntroStringsAmigaFrench[51] = {
	"This is a text test - 1",
	"This is a text test - 2",
	"Salut Kallak...",
	"...Puissant Chef de l'Ordre des Mystiques Royaux!",
	"Je t'ai fait peur?",
	"Malcolm!",
	"On m'a dit hier que tu t'""\x82""tais ""\x82""vad""\x82"".",
	"Je t'attendais depuis longtemps.",
	"Pourquoi me serais-je press""\x82""?",
	"C'est moi qui gouverne ce pays!",
	"Ton faible sort n'a pas d'effet sur moi.",
	"Tue-moi maintenant!",
	"Il ne me reste pas beaucoup de pouvoirs magiques.",
	"Je veux te faire du mal, sois-en s""\x96""r...",
	"...Maintenant, tu es transform""\x82"" en pierre...",
	"...mais je te laisse tes yeux.",
	"Je ne verse aucune larme pour Kyrandia...",
	"...mais je ne peux pas te refuser les tiennes.",
	"Malcolm le Bouffon est libre!",
	"Il contr""\x93""le la Kyragemme maintenant...",
	"...source de tous les pouvoirs magiques de Kyrandia!",
	"",
	"Comment oses-tu ME faire tr""\x82""bucher!",
	"Mais non, quelque chose de sp""\x82""cial pour toi...",
	"Un sort humoristique!",
	"Mais je pr""\x82""viendrai.",
	"Ne saute pas sur CET arbre!",
	"Ne grimpe pas sur CET arbre, petit ""\x82""cureuil!",
	"Hou!",
	"C'est plus marrant comme ""\x87""a...",
	"...n'est-ce pas?",
	"Ha ha ha...",
	"Les doigts ne sont-ils pas une chose merveilleuse?",
	"C'est super d'""\x88""tre en vie!",
	"Brandon!",
	"Grand-P""\x8A""re! On y est arriv""\x82""!",
	"Non! TU y es arriv""\x82""!",
	"Longue vie au Roi Brandon!",
	"Longue vie ""\x85"" l'Ordre des Mystiques Royaux!",
	"Retournons mettre de l'ordre dans Kyrandia!",
	"Bonne id""\x82""e!",
	"En tant que Roi...",
	"je d""\x82""clare que les sandales sont d""\x82""sormais les souliers officiels ""\x85"" Kyrandia!",
	"Bien jou""\x82"", Brandon!",
	"La Terre ne pleure plus...",
	"Et tu as retrouv""\x82"" tes amis!",
	"Ma Ch""\x8A""re Brynn...",
	"Malcolm s'est ""\x82""vad""\x82""!",
	"Il viendra me chercher bient""\x93""t.",
	"S'il te pla""\x8C""t Brandon, aide-moi...",
	""
};

static const StringListProvider k1IntroStringsAmigaFrenchProvider = { ARRAYSIZE(k1IntroStringsAmigaFrench), k1IntroStringsAmigaFrench };

static const char *const k1ItemNamesAmigaFrench[82] = {
	"Grenat",
	"Am""\x82""thyste",
	"Aigue-marine",
	"Diamant",
	"Emeraude",
	"Perle",
	"Rubis",
	"Olivine",
	"Saphir",
	"Opale",
	"Topaze",
	"Onyx",
	"Aventurine",
	"Pierre de Lune",
	"Pierre d'Iris",
	"Magn""\x82""tite",
	"Rose",
	"Tulipe",
	"Orchid""\x82""e",
	"Rose d'argent",
	"Statuette d'argent",
	"Pi""\x8A""ce d'argent",
	"Pi""\x8A""ce d'or",
	"Bague en or",
	"Calice royal",
	"Pomme de pin",
	"Gland",
	"Noix",
	"Baie de feu luisantes",
	"Baie de feu",
	"Poisson",
	"Ar""\x88""te",
	"Gigot de mouton",
	"Os",
	"Pomme",
	"Trognon de pomme",
	"Myrtille",
	"Champignon",
	"Note",
	"Bille",
	"Scie",
	"Croix ans""\x82""e",
	"Plume",
	"Oeuf",
	"Feuille",
	"Tr""\x8A""fle",
	"Etoile bris""\x82""e",
	"Boule de cristal",
	"Larme",
	"Miroir",
	"Tesson de glace",
	"Fl""\x96""te",
	"Sablier",
	"Cl""\x82"" m""\x82""tallique",
	"Cl""\x82"" de jade",
	"Cl""\x82"" obsidion",
	"Potion rouge",
	"Potion bleue",
	"Potion jaune",
	"Potion verte",
	"Potion orange",
	"Potion violette",
	"Potion d'arcs-en-ciel",
	"Eau fraiche",
	"Eau sal""\x82""e",
	"Eau min""\x82""rale",
	"Eau magique",
	"Gourde vide",
	"Parchemin",
	"Morceau de parchemin",
	"Pierre magique rouge",
	"Pierre magique orange",
	"Pierre magique jaune",
	"Pierre magique verte",
	"Pierre magique turquoise",
	"Pierre magique bleue",
	"Pierre magique violette",
	"Rocher lourd",
	"Couronne royale",
	"Sceptre royal",
	"Cl""\x82"" en or",
	"Objet inconnu"
};

static const StringListProvider k1ItemNamesAmigaFrenchProvider = { ARRAYSIZE(k1ItemNamesAmigaFrench), k1ItemNamesAmigaFrench };

static const char *const k1TakenStringsAmigaFrench[1] = {
	" pris."
};

static const StringListProvider k1TakenStringsAmigaFrenchProvider = { ARRAYSIZE(k1TakenStringsAmigaFrench), k1TakenStringsAmigaFrench };

static const char *const k1PlacedStringsAmigaFrench[1] = {
	" plac""\x82""."
};

static const StringListProvider k1PlacedStringsAmigaFrenchProvider = { ARRAYSIZE(k1PlacedStringsAmigaFrench), k1PlacedStringsAmigaFrench };

static const char *const k1DroppedStringsAmigaFrench[1] = {
	" l""\x83""ch""\x82""."
};

static const StringListProvider k1DroppedStringsAmigaFrenchProvider = { ARRAYSIZE(k1DroppedStringsAmigaFrench), k1DroppedStringsAmigaFrench };

static const char *const k1NoDropStringsAmigaFrench[2] = {
	"Vous ne pouvez pas l""\x83""cher autre chose ici.",
	"Vous ne pouvez pas mettre ""\x87""a l""\x85""."
};

static const StringListProvider k1NoDropStringsAmigaFrenchProvider = { ARRAYSIZE(k1NoDropStringsAmigaFrench), k1NoDropStringsAmigaFrench };

static const char *const k1PutDownStringAmigaFrench[1] = {
	"Il faudrait peut-""\x88""tre que je pose ""\x87""a d'abord."
};

static const StringListProvider k1PutDownStringAmigaFrenchProvider = { ARRAYSIZE(k1PutDownStringAmigaFrench), k1PutDownStringAmigaFrench };

static const char *const k1WaitAmuletStringAmigaFrench[1] = {
	"Je suppose qu'il me faut attendre que mon amulette retrouve son pouvoir."
};

static const StringListProvider k1WaitAmuletStringAmigaFrenchProvider = { ARRAYSIZE(k1WaitAmuletStringAmigaFrench), k1WaitAmuletStringAmigaFrench };

static const char *const k1BlackJewelStringAmigaFrench[1] = {
	"C'est un bijou, mais pourquoi est-il noir?"
};

static const StringListProvider k1BlackJewelStringAmigaFrenchProvider = { ARRAYSIZE(k1BlackJewelStringAmigaFrench), k1BlackJewelStringAmigaFrench };

static const char *const k1HealingTipStringAmigaFrench[1] = {
	"Hue, ""\x87""a pourrait bien m'""\x88""tre utile si je suis bless""\x82""."
};

static const StringListProvider k1HealingTipStringAmigaFrenchProvider = { ARRAYSIZE(k1HealingTipStringAmigaFrench), k1HealingTipStringAmigaFrench };

static const char *const k1PoisonGoneStringAmigaFrench[2] = {
	"G""\x82""nial!",
	"Les effets du poison ont disparu!"
};

static const StringListProvider k1PoisonGoneStringAmigaFrenchProvider = { ARRAYSIZE(k1PoisonGoneStringAmigaFrench), k1PoisonGoneStringAmigaFrench };

static const char *const k1ThePoisonStringsAmigaFrench[4] = {
	"Le poison...",
	"Je ne peux plus respirer...",
	"Je ne me sens pas tr""\x8A""s bien...",
	"Ce serpent doit ""\x88""tre \rvenimeux!"
};

static const StringListProvider k1ThePoisonStringsAmigaFrenchProvider = { ARRAYSIZE(k1ThePoisonStringsAmigaFrench), k1ThePoisonStringsAmigaFrench };

static const char *const k1FluteStringsAmigaFrench[2] = {
	// Original:
	//   "a ne sonne pas tr UBYTE s bien.",
	//   "Cette derni UBYTE re note  int tait vraiment aigue!"
	// Using the proper strings from DOS FR
	"\x80""a ne sonne pas tr""\x8A""s bien.",
	"Cette derni""\x8A""re note ""\x82""tait vraiment aigue!"
};

static const StringListProvider k1FluteStringsAmigaFrenchProvider = { ARRAYSIZE(k1FluteStringsAmigaFrench), k1FluteStringsAmigaFrench };

static const char *const k1WispJewelStringsAmigaFrench[3] = {
	"Je ne m'en sens pas vraiment capable maintenant.",
	"Je devrait poser mon, ma, mes ",
	", d'abord."
};

static const StringListProvider k1WispJewelStringsAmigaFrenchProvider = { ARRAYSIZE(k1WispJewelStringsAmigaFrench), k1WispJewelStringsAmigaFrench };

static const char *const k1MagicJewelStringsAmigaFrench[1] = {
	"C'""\x82""tait bizarre."
};

static const StringListProvider k1MagicJewelStringsAmigaFrenchProvider = { ARRAYSIZE(k1MagicJewelStringsAmigaFrench), k1MagicJewelStringsAmigaFrench };

static const char *const k1FlaskFullStringAmigaFrench[1] = {
	// Original: "Cette gourde est ddjj pleine."
	// Using the proper string from DOS FR
	"Cette gourde est d""\x82""j""\x85"" pleine."
};

static const StringListProvider k1FlaskFullStringAmigaFrenchProvider = { ARRAYSIZE(k1FlaskFullStringAmigaFrench), k1FlaskFullStringAmigaFrench };

static const char *const k1FullFlaskStringAmigaFrench[4] = {
	"La gourde est remplie \rd'eau gazeuse fra""\x8C""che.",
	"La gourde est remplie \rd'eau sal""\x82""e.",
	"La gourde est remplie \rd'eau min""\x82""rale.",
	"Eau magique."
};

static const StringListProvider k1FullFlaskStringAmigaFrenchProvider = { ARRAYSIZE(k1FullFlaskStringAmigaFrench), k1FullFlaskStringAmigaFrench };

static const char *const k1OutroHomeStringAmigaFrench[1] = {
	"Maison"
};

static const StringListProvider k1OutroHomeStringAmigaFrenchProvider = { ARRAYSIZE(k1OutroHomeStringAmigaFrench), k1OutroHomeStringAmigaFrench };

static const char *const k1VeryCleverStringAmigaFrench[1] = {
	"Malin! Mais vos efforts restent vains."
};

static const StringListProvider k1VeryCleverStringAmigaFrenchProvider = { ARRAYSIZE(k1VeryCleverStringAmigaFrench), k1VeryCleverStringAmigaFrench };

static const char *const k1GUIStringsAmigaFrench[28] = {
	"The Legend of Kyrandia",
	"Charger un jeu",
	"Sauvegarder ce jeu",
	"Contr""\x93""les du jeu",
	"Quitter le jeu",
	"Reprendre le jeu",
	"Contr""\x93""les du jeu",
	"Quel jeu voulez-vous re-charger?",
	"S""\x82""lectionnez une position o""\x97"" sauvegarder:",
	"[ EMPLACEMENT VIDE ]",
	"Annuler",
	"Entrez description de votre jeu sauvegard""\x82"".",
	"Sauvegarder",
	"Repose en paix, Brandon.",
	"Vous voulez vraiment quitter le jeu?",
	"XXXXXXXXXXXXXXXXX",
	"XXXXXXXXXXXXXXXXX",
	"XXXXXXXXXXXXXXXXX",
	"XXXXXXXXXXXXXXXXX",
	"Menu principal",
	"activ""\x82",
	"d""\x82""sactiv""\x82",
	"Oui",
	"Non",
	"Vitesse de d""\x82""placement",
	"Vitesse du texte",
	"La musique est ",
	"Les sons sont "
};

static const StringListProvider k1GUIStringsAmigaFrenchProvider = { ARRAYSIZE(k1GUIStringsAmigaFrench), k1GUIStringsAmigaFrench };

static const char *const k1NewGameStringAmigaFrench[1] = {
	"[ COMMENCER UN NOUVEAU JEU ]"
};

static const StringListProvider k1NewGameStringAmigaFrenchProvider = { ARRAYSIZE(k1NewGameStringAmigaFrench), k1NewGameStringAmigaFrench };

static const char *const k1ConfigStringsAmigaFrench[6] = {
	"plus lent",
	"lent",
	"normal",
	"rapide",
	"plus rapide",
	"cliquable"
};

static const StringListProvider k1ConfigStringsAmigaFrenchProvider = { ARRAYSIZE(k1ConfigStringsAmigaFrench), k1ConfigStringsAmigaFrench };

static const byte k1CreditsStringsAmigaFrench[1280] = {
	0x05, 0x46, 0x61, 0x62, 0x6C, 0x65, 0x73, 0x20,
	0x26, 0x20, 0x46, 0x69, 0x65, 0x6E, 0x64, 0x73,
	0x0D, 0x05, 0x42, 0x6F, 0x6F, 0x6B, 0x20, 0x49,
	0x0D, 0x05, 0x54, 0x48, 0x45, 0x20, 0x4C, 0x45,
	0x47, 0x45, 0x4E, 0x44, 0x20, 0x4F, 0x46, 0x20,
	0x4B, 0x59, 0x52, 0x41, 0x4E, 0x44, 0x49, 0x41,
	0x0D, 0x0D, 0x05, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x82, 0x20, 0x70, 0x61, 0x72,
	0x0D, 0x05, 0x57, 0x65, 0x73, 0x74, 0x77, 0x6F,
	0x6F, 0x64, 0x20, 0x53, 0x74, 0x75, 0x64, 0x69,
	0x6F, 0x73, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,
	0x0D, 0x0D, 0x03, 0x52, 0x82, 0x61, 0x6C, 0x69,
	0x73, 0x61, 0x74, 0x65, 0x75, 0x72, 0x3A, 0x04,
	0x42, 0x72, 0x65, 0x74, 0x74, 0x20, 0x57, 0x2E,
	0x20, 0x53, 0x70, 0x65, 0x72, 0x72, 0x79, 0x0D,
	0x0D, 0x03, 0x43, 0x6F, 0x6E, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6F, 0x6E, 0x3A, 0x04, 0x4D, 0x69,
	0x63, 0x68, 0x61, 0x65, 0x6C, 0x20, 0x4C, 0x65,
	0x67, 0x67, 0x0D, 0x04, 0x52, 0x69, 0x63, 0x6B,
	0x20, 0x50, 0x61, 0x72, 0x6B, 0x73, 0x0D, 0x04,
	0x50, 0x61, 0x75, 0x6C, 0x20, 0x53, 0x2E, 0x20,
	0x4D, 0x75, 0x64, 0x72, 0x61, 0x0D, 0x0D, 0x03,
	0x43, 0x68, 0x65, 0x66, 0x20, 0x50, 0x72, 0x6F,
	0x67, 0x72, 0x61, 0x6D, 0x6D, 0x65, 0x75, 0x72,
	0x3A, 0x04, 0x4D, 0x69, 0x63, 0x68, 0x61, 0x65,
	0x6C, 0x20, 0x4C, 0x65, 0x67, 0x67, 0x0D, 0x0D,
	0x03, 0x50, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D,
	0x6D, 0x65, 0x75, 0x72, 0x20, 0x64, 0x75, 0x20,
	0x53, 0x63, 0x82, 0x6E, 0x61, 0x72, 0x69, 0x6F,
	0x3A, 0x04, 0x53, 0x63, 0x6F, 0x74, 0x74, 0x20,
	0x42, 0x6F, 0x77, 0x65, 0x6E, 0x0D, 0x0D, 0x03,
	0x50, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D, 0x6D,
	0x65, 0x75, 0x72, 0x20, 0x41, 0x6D, 0x69, 0x67,
	0x61, 0x3A, 0x04, 0x42, 0x69, 0x6C, 0x6C, 0x20,
	0x53, 0x74, 0x6F, 0x6B, 0x65, 0x73, 0x0D, 0x0D,
	0x03, 0x47, 0x82, 0x6E, 0x82, 0x72, 0x69, 0x71,
	0x75, 0x65, 0x3A, 0x04, 0x43, 0x68, 0x72, 0x69,
	0x73, 0x74, 0x6F, 0x70, 0x68, 0x65, 0x72, 0x20,
	0x59, 0x61, 0x74, 0x65, 0x73, 0x0D, 0x0D, 0x03,
	0x43, 0x6F, 0x6E, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6F, 0x6E, 0x20, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x71, 0x75, 0x65, 0x3A, 0x04, 0x52,
	0x69, 0x63, 0x6B, 0x20, 0x50, 0x61, 0x72, 0x6B,
	0x73, 0x0D, 0x04, 0x52, 0x65, 0x6E, 0x20, 0x4F,
	0x6C, 0x73, 0x65, 0x6E, 0x0D, 0x04, 0x4C, 0x6F,
	0x75, 0x69, 0x73, 0x65, 0x20, 0x53, 0x61, 0x6E,
	0x64, 0x6F, 0x76, 0x61, 0x6C, 0x0D, 0x04, 0x4A,
	0x6F, 0x73, 0x65, 0x70, 0x68, 0x20, 0x48, 0x65,
	0x77, 0x69, 0x74, 0x74, 0x20, 0x49, 0x56, 0x0D,
	0x04, 0x4A, 0x75, 0x64, 0x69, 0x74, 0x68, 0x20,
	0x50, 0x65, 0x74, 0x65, 0x72, 0x73, 0x6F, 0x6E,
	0x0D, 0x04, 0x41, 0x61, 0x72, 0x6F, 0x6E, 0x20,
	0x50, 0x6F, 0x77, 0x65, 0x6C, 0x6C, 0x0D, 0x04,
	0x45, 0x6C, 0x69, 0x65, 0x20, 0x41, 0x72, 0x61,
	0x62, 0x69, 0x61, 0x6E, 0x0D, 0x04, 0x45, 0x72,
	0x69, 0x63, 0x20, 0x53, 0x68, 0x75, 0x6C, 0x74,
	0x73, 0x0D, 0x0D, 0x03, 0x52, 0x82, 0x61, 0x6C,
	0x69, 0x73, 0x61, 0x74, 0x65, 0x75, 0x72, 0x20,
	0x41, 0x75, 0x64, 0x69, 0x6F, 0x3A, 0x04, 0x50,
	0x61, 0x75, 0x6C, 0x20, 0x53, 0x2E, 0x20, 0x4D,
	0x75, 0x64, 0x72, 0x61, 0x0D, 0x0D, 0x03, 0x4D,
	0x75, 0x73, 0x69, 0x71, 0x75, 0x65, 0x3A, 0x04,
	0x46, 0x72, 0x61, 0x6E, 0x6B, 0x20, 0x4B, 0x6C,
	0x65, 0x70, 0x61, 0x63, 0x6B, 0x69, 0x0D, 0x0D,
	0x03, 0x45, 0x66, 0x66, 0x65, 0x74, 0x73, 0x20,
	0x53, 0x6F, 0x6E, 0x6F, 0x72, 0x65, 0x73, 0x3A,
	0x04, 0x44, 0x77, 0x69, 0x67, 0x68, 0x74, 0x20,
	0x4F, 0x6B, 0x61, 0x68, 0x61, 0x72, 0x61, 0x0D,
	0x0D, 0x03, 0x41, 0x75, 0x74, 0x65, 0x75, 0x72,
	0x3A, 0x04, 0x22, 0x4C, 0x65, 0x20, 0x43, 0x6F,
	0x63, 0x6F, 0x22, 0x0D, 0x0D, 0x03, 0x41, 0x73,
	0x73, 0x75, 0x72, 0x61, 0x6E, 0x63, 0x65, 0x20,
	0x51, 0x75, 0x61, 0x6C, 0x69, 0x74, 0x82, 0x3A,
	0x04, 0x47, 0x6C, 0x65, 0x6E, 0x6E, 0x20, 0x53,
	0x70, 0x65, 0x72, 0x72, 0x79, 0x0D, 0x04, 0x4D,
	0x61, 0x74, 0x74, 0x20, 0x43, 0x6F, 0x6C, 0x6C,
	0x69, 0x6E, 0x73, 0x0D, 0x04, 0x42, 0x69, 0x6C,
	0x6C, 0x20, 0x46, 0x6F, 0x73, 0x74, 0x65, 0x72,
	0x0D, 0x04, 0x4D, 0x69, 0x63, 0x68, 0x61, 0x65,
	0x6C, 0x20, 0x4C, 0x69, 0x67, 0x68, 0x74, 0x6E,
	0x65, 0x72, 0x0D, 0x04, 0x4D, 0x69, 0x63, 0x68,
	0x61, 0x65, 0x6C, 0x20, 0x47, 0x61, 0x74, 0x65,
	0x72, 0x0D, 0x04, 0x45, 0x75, 0x67, 0x65, 0x6E,
	0x65, 0x20, 0x4D, 0x61, 0x72, 0x74, 0x69, 0x6E,
	0x0D, 0x04, 0x4D, 0x69, 0x63, 0x68, 0x61, 0x65,
	0x6C, 0x20, 0x47, 0x6C, 0x6F, 0x73, 0x65, 0x63,
	0x6B, 0x6C, 0x0D, 0x04, 0x4A, 0x75, 0x73, 0x74,
	0x69, 0x6E, 0x20, 0x4E, 0x6F, 0x72, 0x72, 0x0D,
	0x04, 0x54, 0x6F, 0x70, 0x20, 0x53, 0x74, 0x61,
	0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6E,
	0x67, 0x0D, 0x04, 0x54, 0x65, 0x73, 0x74, 0x69,
	0x6E, 0x67, 0x20, 0x31, 0x2C, 0x20, 0x32, 0x2C,
	0x20, 0x33, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x05,
	0x52, 0x65, 0x6D, 0x65, 0x72, 0x63, 0x69, 0x65,
	0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x75, 0x6C, 0x69, 0x65,
	0x72, 0x73, 0x20, 0x85, 0x0D, 0x05, 0x4C, 0x79,
	0x6C, 0x65, 0x20, 0x4A, 0x2E, 0x20, 0x48, 0x61,
	0x6C, 0x6C, 0x0D, 0x05, 0x44, 0x61, 0x76, 0x69,
	0x64, 0x20, 0x42, 0x69, 0x73, 0x68, 0x6F, 0x70,
	0x0D, 0x05, 0x22, 0x44, 0x6F, 0x63, 0x22, 0x0D,
	0x05, 0x65, 0x74, 0x0D, 0x05, 0x22, 0x54, 0x68,
	0x65, 0x20, 0x4C, 0x6F, 0x75, 0x22, 0x0D, 0x0D,
	0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x05, 0x50,
	0x45, 0x52, 0x53, 0x4F, 0x4E, 0x4E, 0x41, 0x47,
	0x45, 0x53, 0x0D, 0x0D, 0x05, 0x4D, 0x61, 0x6C,
	0x63, 0x6F, 0x6C, 0x6D, 0x20, 0x6C, 0x65, 0x20,
	0x42, 0x6F, 0x75, 0x66, 0x66, 0x6F, 0x6E, 0x0D,
	0x05, 0x42, 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6E,
	0x20, 0x6C, 0x65, 0x20, 0x43, 0x6F, 0x75, 0x72,
	0x61, 0x67, 0x65, 0x75, 0x78, 0x0D, 0x05, 0x42,
	0x72, 0x61, 0x6E, 0x64, 0x79, 0x77, 0x69, 0x6E,
	0x65, 0x20, 0x65, 0x74, 0x20, 0x44, 0x61, 0x72,
	0x6D, 0x0D, 0x05, 0x50, 0x72, 0x88, 0x74, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x20, 0x42, 0x72, 0x79,
	0x6E, 0x6E, 0x0D, 0x05, 0x5A, 0x61, 0x6E, 0x74,
	0x68, 0x69, 0x61, 0x2C, 0x20, 0x6C, 0x61, 0x20,
	0x52, 0x65, 0x69, 0x6E, 0x65, 0x20, 0x64, 0x65,
	0x20, 0x6C, 0x27, 0x41, 0x6C, 0x63, 0x68, 0x69,
	0x6D, 0x69, 0x65, 0x0D, 0x05, 0x48, 0x65, 0x72,
	0x6D, 0x61, 0x6E, 0x2C, 0x20, 0x6C, 0x27, 0x68,
	0x6F, 0x6D, 0x6D, 0x65, 0x20, 0x85, 0x20, 0x74,
	0x6F, 0x75, 0x74, 0x20, 0x66, 0x61, 0x69, 0x72,
	0x65, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,
	0x05, 0x54, 0x4F, 0x55, 0x54, 0x45, 0x20, 0x52,
	0x45, 0x53, 0x53, 0x45, 0x4D, 0x42, 0x4C, 0x41,
	0x4E, 0x43, 0x45, 0x20, 0x44, 0x45, 0x53, 0x20,
	0x50, 0x45, 0x52, 0x53, 0x4F, 0x4E, 0x4E, 0x41,
	0x47, 0x45, 0x53, 0x20, 0x44, 0x45, 0x20, 0x43,
	0x45, 0x20, 0x4A, 0x45, 0x55, 0x0D, 0x05, 0x41,
	0x56, 0x45, 0x43, 0x20, 0x44, 0x45, 0x53, 0x20,
	0x50, 0x45, 0x52, 0x53, 0x4F, 0x4E, 0x4E, 0x45,
	0x53, 0x20, 0x56, 0x49, 0x56, 0x41, 0x4E, 0x54,
	0x45, 0x53, 0x20, 0x4F, 0x55, 0x20, 0x44, 0x45,
	0x43, 0x45, 0x44, 0x45, 0x45, 0x53, 0x0D, 0x05,
	0x45, 0x53, 0x54, 0x20, 0x55, 0x4E, 0x45, 0x20,
	0x50, 0x55, 0x52, 0x45, 0x20, 0x43, 0x4F, 0x4E,
	0x43, 0x49, 0x44, 0x45, 0x4E, 0x43, 0x45, 0x2E,
	0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x05, 0x4D, 0x61,
	0x78, 0x54, 0x72, 0x61, 0x78, 0xE2, 0x20, 0x6D,
	0x75, 0x73, 0x69, 0x63, 0x20, 0x73, 0x6F, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x0D, 0x05, 0x20,
	0xE3, 0x20, 0x31, 0x39, 0x39, 0x32, 0x20, 0x53,
	0x79, 0x6C, 0x76, 0x61, 0x6E, 0x20, 0x54, 0x65,
	0x63, 0x68, 0x6E, 0x69, 0x63, 0x61, 0x6C, 0x20,
	0x41, 0x72, 0x74, 0x73, 0x0D, 0x05, 0x4C, 0x69,
	0x63, 0x65, 0x6E, 0x73, 0x65, 0x64, 0x20, 0x62,
	0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x44, 0x72,
	0x65, 0x61, 0x6D, 0x65, 0x72, 0x73, 0x20, 0x47,
	0x75, 0x69, 0x6C, 0x64, 0x2C, 0x20, 0x49, 0x6E,
	0x63, 0x2E, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,
	0x05, 0x43, 0x6F, 0x70, 0x79, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x20, 0x28, 0x63, 0x29, 0x20, 0x31,
	0x39, 0x39, 0x32, 0x2C, 0x20, 0x57, 0x65, 0x73,
	0x74, 0x77, 0x6F, 0x6F, 0x64, 0x20, 0x53, 0x74,
	0x75, 0x64, 0x69, 0x6F, 0x73, 0x2C, 0x20, 0x49,
	0x6E, 0x63, 0x2E, 0x0D, 0x05, 0x54, 0x6F, 0x75,
	0x73, 0x20, 0x64, 0x72, 0x6F, 0x69, 0x74, 0x73,
	0x20, 0x72, 0x82, 0x73, 0x65, 0x72, 0x76, 0x82,
	0x73, 0x2E, 0x0D, 0x0D, 0x0D, 0x0D, 0x00, 0x00
};

static const ByteProvider k1CreditsStringsAmigaFrenchProvider = { ARRAYSIZE(k1CreditsStringsAmigaFrench), k1CreditsStringsAmigaFrench };

